---
- name: "Query Running Instances for Cluster {{ cluster_tag }}"
  ec2_instance_info:
    filters:
      instance-state-name: running
      "tag:AlwaysUp": "false"
      tag-key: "{{ cluster_tag }}"
    region: "{{ aws_region }}"
  register: cluster_instance_results

- name: "DEBUG: cluster_instance_results"
  debug:
    var: cluster_instance_results
    verbosity: 2

- name: Reset cluster_irt_map
  set_fact:
    cluster_irt_map: []

- name: Build List of Instance Running Hours
  set_fact:
    cluster_irt_map: >-
      {{
        cluster_irt_map +
        [
          (now(utc=True) - (item.launch_time | to_datetime('%Y-%m-%dT%H:%M:%S+00:00'))).total_seconds() / 3600 | int
        ]
      }}
  with_items:
    - "{{ cluster_instance_results.instances }}"

- name: "DEBUG: cluster_irt_map"
  debug:
    var: cluster_irt_map
    verbosity: 2

- name: Set Cluster Node Max Runtime
  set_fact:
    cluster_max_irt: "{{ cluster_irt_map | sort | last }}"

- name: "DEBUG: cluster_max_irt"
  debug:
    var: cluster_max_irt
    verbosity: 2

- name: Append Message to Google Hangouts Chat Thread
  include_role:
    name: google-hangouts-chat
  vars:
    ghc_init_thread: false
    ghc_message: "\nCluster {{ cluster_tag }} has max instance runtime of {{ cluster_max_irt | int }} hours...shutting down."
  when:
    - cluster_max_irt | int > min_runtime_hours

- name: "Shutdown Instances for Cluster {{ cluster_tag }}"
  ec2_instance:
    filters:
      instance-state-name: running
      "tag:AlwaysUp": "false"
      tag-key: "{{ cluster_tag }}"
    region: "{{ aws_region }}"
    state: stopped
    wait: false
  when:
    - cluster_max_irt | int > min_runtime_hours